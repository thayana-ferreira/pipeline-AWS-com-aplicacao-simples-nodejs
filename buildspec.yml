version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 14
      java: corretto17  
    commands:
      - echo "Installing NPM dependencies..."
      - npm install
      - echo "Instalando OWASP Dependency-Check..."
      - curl -sLO https://github.com/jeremylong/DependencyCheck/releases/download/v9.0.9/dependency-check-9.0.9-release.zip
      - yum install -y unzip || apt-get install -y unzip
      - unzip dependency-check-9.0.9-release.zip
      - echo "Verificando diretórios extraídos..."
      - ls -R  # Mostra todos os arquivos extraídos para depuração
      - echo "Dando permissão ao script..."
      - chmod +x $(find . -type d -name "dependency-check*" | head -n 1)/bin/dependency-check.sh

  pre_build:
    commands:
      - echo "Pre-build phase"

  build:
    commands:
      - echo "Rodando análise de dependências..."
      - echo "API Key configurada: ${NVD_API_KEY:-'NÃO CONFIGURADA'}"
      - mkdir -p reports  # Garante que o diretório existe antes de rodar
      - >
        $(find . -type d -name "dependency-check*" | head -n 1)/bin/dependency-check.sh
        --project "meu-projeto"
        --scan .
        --format HTML
        --out reports/
        --nvdApiKey "$NVD_API_KEY"
        --nvdApiDelay 600 || echo "Falha na análise de dependências, verificar logs."

  post_build:
    commands:
      - echo "Análise concluída! Salvando resultados..."
      - mkdir -p reports  # Garante que o diretório existe
      - aws s3 cp reports/ s3://pipeline5-trabalho-d --recursive || echo "Nenhum relatório encontrado para upload."

artifacts:
  files:
    - '**/*'  # Inclui todos os arquivos e subpastas recursivamente
